const user = {
  name: "divya",
  age: 12,
  message: function () {
    console.log(`here im ${this.name}`); // this refers to the current context
    console.log(this);
  },
};

// console.log(user);
// user.name = "radha";
// user.message();

// console.log(this);

// .....................................................
// differance in function nad arrow function : this behaves differently in both

const person = {
  name: "Bob",
  greet: function () {
    console.log(this.name);
  },
};

person.greet(); // Output: Bob

// arrow function :
const person1 = {
  name: "bob",
  greet: () => {
    console.log(this.name);
  },
};

person1.greet(); // Output: undefined

// ............................................................

const add = (num1, num2) => {
  return num1 + num2;
};
console.log(add(4, 5));

const addOne = (num1, num2) => num1 + num2; // implicite function where no need of return keyword
const addition = (num1, num2) => num1 + num2;
console.log(add(4, 6));

const message = (num1, num2) => console.log("hi");
message();

const test = (num1, num2) => ({ username: "hitesh" }); // while returning obj need to add bracess in implicit function
console.log(test());
